@using CheatCode.Authentication.Shared
@using Microsoft.AspNetCore.Authentication
@{
    ViewData["Title"] = "Home Page";
}
<h2>This is My Jwt Home</h2>

<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="JwtHome" asp-action="Index">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="JwtHome" asp-action="Secret">Secret</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="JwtHome" asp-action="Authenticate">Authenticate</a>
                </li>
            </ul>
        </div>
    </nav>
</header>

<h2>Claims</h2>
@{
    var ar = await Context.AuthenticateAsync();
}

<a asp-controller="CallApi" asp-action="">Call api</a>
<br />
<a asp-controller="CallApi" asp-action="Read">Call read api</a>
<br />
<a asp-controller="CallApi" asp-action="Write">Call write api</a>
<br />

<dl>
    @foreach (var claim in User.Claims)
    {
        <dt>@claim.Type</dt>
        <dd>@claim.Value</dd>
    }
</dl>

<h2>Properties</h2>

<dl>
    @foreach (var prop in ar.Properties?.Items ?? new Dictionary<string, string?>())
    {
        <dt>@prop.Key</dt>
        <dd>@prop.Value</dd>
    }
</dl>